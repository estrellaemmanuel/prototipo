/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas_de_Empleado;
 ///////////los comentarios   con mas palitos  los hice yo 
import Vistas_de_Administracion.*;
import Controlador.ControladorGeneral;
import Conexion.BaseDatos;
import Conexion.DBSetencias;
import Utilidades.ControladorPantalla;
import Vistas_de_Administracion.Actualizacion_de_datos.ActualizarProducto;
import Vistas_de_Administracion.cargas_de_datos.CargaProducto;
import esqueleto.Menu_2;
import javax.swing.table.DefaultTableModel;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author daisi
 */
public class AdministrarProducto_por_emlpeado extends javax.swing.JFrame {
    
     public static String Searchs;
     ControladorGeneral gg;
     DefaultTableModel modelo;
     private ControladorPantalla refcontroladorPantalla;
   
    
    
    /**
     * Creates new form AdministrarProducto
     */
    public AdministrarProducto_por_emlpeado() {
        initComponents();
        setLocationRelativeTo(this);
        gg = new ControladorGeneral();
        modelo = new DefaultTableModel();
        actualizarTabla(DBSetencias.ConsultaSelectProducto);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txt_search = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton5_menu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Administrar Productos");
        setBackground(new java.awt.Color(233, 132, 31));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Descripcion", "Precio", "Stock"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tabla.setColumnSelectionAllowed(true);
        tabla.setName("tabla"); // NOI18N
        tabla.getTableHeader().setReorderingAllowed(false);
        tabla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tabla);
        tabla.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (tabla.getColumnModel().getColumnCount() > 0) {
            tabla.getColumnModel().getColumn(0).setResizable(false);
        }

        jLabel7.setText("Producto :");

        txt_search.setToolTipText("Comience a escribir para buscar");
        txt_search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_searchKeyReleased(evt);
            }
        });

        jButton6.setText("MOSTRAR TODOS");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton2.setText("Agregar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Modificar");
        jButton3.setAlignmentY(0.0F);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Eliminar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText(" Productos");

        jButton1.setText("Buscar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton5_menu.setText("Menu");
        jButton5_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5_menuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 615, Short.MAX_VALUE)
                        .addComponent(jButton5_menu)
                        .addGap(6, 6, 6))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(105, 105, 105)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(162, 162, 162)
                .addComponent(jLabel7)
                .addGap(90, 90, 90)
                .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(6, 6, 6))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(238, 238, 238))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txt_search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jButton6))
                .addGap(33, 33, 33)
                .addComponent(jButton5_menu)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
     
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        CargaProducto Cp = new CargaProducto();
        Cp.setVisible(true);
// TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
           // TODO add your handling code here:

           
           
          if(!tabla.getSelectionModel().isSelectionEmpty()){
          int row = tabla.getSelectedRow();
          int id = (int) (tabla.getModel().getValueAt(row, 0)) ; 
          String Nombre = (tabla.getModel().getValueAt(row, 1).toString()) ; 
          String Descripcion = (tabla.getModel().getValueAt(row, 2).toString()) ; 
          int Precio = (int) (tabla.getModel().getValueAt(row, 3)) ; 
          int Stock = (int) (tabla.getModel().getValueAt(row, 4)) ; 
          ActualizarProducto Ap = new ActualizarProducto();
          Ap.ObtenerInfo(id,Nombre,Descripcion,Precio,Stock);
          Ap.setVisible(true);
          }else{
               JOptionPane.showMessageDialog(null, "Para modificar un producto seleccione uno de la lista"); 
         
          }
           
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_searchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_searchKeyReleased
        String query = txt_search.getText();
        Filter(query);
        
    }//GEN-LAST:event_txt_searchKeyReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if(!tabla.getSelectionModel().isSelectionEmpty()){
        int row = tabla.getSelectedRow();
        int Onclick = (int) (tabla.getModel().getValueAt(row, 0)) ; 
        String ProductoNombre = (tabla.getModel().getValueAt(row, 1).toString()) ; 
        int reply = JOptionPane.showConfirmDialog(null, "Realmente desea eliminar el producto ID " + Onclick +" - "+ProductoNombre+" ?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        
        if (reply == JOptionPane.YES_OPTION) {
            gg.EliminarProducto(Onclick);
            JOptionPane.showMessageDialog(null, "El producto fue eliminado correctamente");
            LimpiarTabla();
            actualizarTabla(DBSetencias.ConsultaSelectProducto);
          
        }else {
           JOptionPane.showMessageDialog(null, "Se cancelo la operacion para eliminar el producto");
        }
         }else{
               JOptionPane.showMessageDialog(null, "Para eliminar un producto seleccione uno de la lista"); 
         
          }
         
        
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        LimpiarTabla();
        actualizarTabla(DBSetencias.ConsultaSelectProducto);
    }//GEN-LAST:event_jButton6ActionPerformed

    private void tablaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaMouseClicked
        // TODO add your handling code here:
        
        try{
        int row = tabla.getSelectedRow();
        String Onclick = (tabla.getModel().getValueAt(row, 0).toString()) ;   
        System.out.println(Onclick);
            
        }catch(Exception e){
            
            JOptionPane.showMessageDialog(null, e);
        }
            
        
        
        
        
        
    }//GEN-LAST:event_tablaMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        LimpiarTabla();
        String Busqueda = txt_search.getText();
        gg.BuscarProducto(Busqueda,tabla); 
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5_menuActionPerformed
        Menu_2 m = new Menu_2();
        m.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jButton5_menuActionPerformed
   
    public void LimpiarTabla(){
         int rowCount = modelo.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
          modelo.removeRow(i);
          }
        actualizarTabla(DBSetencias.ConsultaSelectProducto);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        AdministrarProducto_por_emlpeado form = new AdministrarProducto_por_emlpeado();
        form.setVisible(true);
  }
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5_menu;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables

private void actualizarTabla(String consulta) {
        modelo = gg.mostrar(consulta);
        tabla.setModel(modelo);
        
        
        //Enable to hide "ID" - Disable to show "ID//
       // tabla.getColumnModel().removeColumn(tabla.getColumnModel().getColumn(0));
    }
    

        private void  Filter(String Query){
            // No se esta utilizando
        TableRowSorter<DefaultTableModel>  tr = new TableRowSorter<DefaultTableModel>(modelo);
        tabla.setRowSorter(tr);
        
        tr.setRowFilter(RowFilter.regexFilter(Query));
    }




}
